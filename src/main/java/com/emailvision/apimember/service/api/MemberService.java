
package com.emailvision.apimember.service.api;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "MemberService", targetNamespace = "http://api.service.apimember.emailvision.com/")
@XmlSeeAlso({
    com.emailvision.apimember.service.api.ObjectFactory.class,
    com.emailvision.apimember.service.exceptions.ObjectFactory.class,
    com.emailvision.apiconnection.service.exceptions.ObjectFactory.class
})
public interface MemberService {


    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns java.util.List<com.emailvision.apimember.service.api.ApiMember>
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMemberByEmail", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetMemberByEmail")
    @ResponseWrapper(localName = "getMemberByEmailResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetMemberByEmailResponse")
    public List<ApiMember> getMemberByEmail(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param member
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unjoinMemberByObj", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UnjoinMemberByObj")
    @ResponseWrapper(localName = "unjoinMemberByObjResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UnjoinMemberByObjResponse")
    public long unjoinMemberByObj(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "member", targetNamespace = "")
        SynchroMember member)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param synchroId
     * @param token
     * @return
     *     returns com.emailvision.apimember.service.api.ProcessStatus
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMemberJobStatus", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetMemberJobStatus")
    @ResponseWrapper(localName = "getMemberJobStatusResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetMemberJobStatusResponse")
    public ProcessStatus getMemberJobStatus(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "synchroId", targetNamespace = "")
        long synchroId)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param pwd
     * @param login
     * @param key
     * @return
     *     returns java.lang.String
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "openApiConnection", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.OpenApiConnection")
    @ResponseWrapper(localName = "openApiConnectionResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.OpenApiConnectionResponse")
    public String openApiConnection(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "pwd", targetNamespace = "")
        String pwd,
        @WebParam(name = "key", targetNamespace = "")
        String key)
        throws ConnectionServiceException
    ;

    /**
     * 
     * @param token
     * @param memberId
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rejoinMemberById", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.RejoinMemberById")
    @ResponseWrapper(localName = "rejoinMemberByIdResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.RejoinMemberByIdResponse")
    public long rejoinMemberById(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "memberId", targetNamespace = "")
        long memberId)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param token
     * @return
     *     returns com.emailvision.apimember.service.api.MemberTable
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "descMemberTable", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.DescMemberTable")
    @ResponseWrapper(localName = "descMemberTableResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.DescMemberTableResponse")
    public MemberTable descMemberTable(
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param id
     * @param token
     * @return
     *     returns com.emailvision.apimember.service.api.ApiMember
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getMemberById", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetMemberById")
    @ResponseWrapper(localName = "getMemberByIdResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetMemberByIdResponse")
    public ApiMember getMemberById(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "id", targetNamespace = "")
        long id)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unjoinMemberByEmail", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UnjoinMemberByEmail")
    @ResponseWrapper(localName = "unjoinMemberByEmailResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UnjoinMemberByEmailResponse")
    public long unjoinMemberByEmail(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param member
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertOrUpdateMemberByObj", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.InsertOrUpdateMemberByObj")
    @ResponseWrapper(localName = "insertOrUpdateMemberByObjResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.InsertOrUpdateMemberByObjResponse")
    public long insertOrUpdateMemberByObj(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "member", targetNamespace = "")
        SynchroMember member)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param member
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertMemberByObj", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.InsertMemberByObj")
    @ResponseWrapper(localName = "insertMemberByObjResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.InsertMemberByObjResponse")
    public long insertMemberByObj(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "member", targetNamespace = "")
        SynchroMember member)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rejoinMemberByEmail", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.RejoinMemberByEmail")
    @ResponseWrapper(localName = "rejoinMemberByEmailResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.RejoinMemberByEmailResponse")
    public long rejoinMemberByEmail(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param member
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateMemberByObj", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UpdateMemberByObj")
    @ResponseWrapper(localName = "updateMemberByObjResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UpdateMemberByObjResponse")
    public long updateMemberByObj(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "member", targetNamespace = "")
        SynchroMember member)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param email
     * @param token
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insertMember", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.InsertMember")
    @ResponseWrapper(localName = "insertMemberResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.InsertMemberResponse")
    public long insertMember(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param token
     * @return
     *     returns java.lang.String
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "closeApiConnection", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.CloseApiConnection")
    @ResponseWrapper(localName = "closeApiConnectionResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.CloseApiConnectionResponse")
    public String closeApiConnection(
        @WebParam(name = "token", targetNamespace = "")
        String token)
        throws ConnectionServiceException
    ;

    /**
     * 
     * @param pwd
     * @param partnerkey
     * @param login
     * @return
     *     returns com.emailvision.apimember.service.api.ApiPartnerConnectionResult
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "openPartnerConnection", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.OpenPartnerConnection")
    @ResponseWrapper(localName = "openPartnerConnectionResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.OpenPartnerConnectionResponse")
    public ApiPartnerConnectionResult openPartnerConnection(
        @WebParam(name = "login", targetNamespace = "")
        String login,
        @WebParam(name = "pwd", targetNamespace = "")
        String pwd,
        @WebParam(name = "partnerkey", targetNamespace = "")
        String partnerkey)
        throws ConnectionServiceException
    ;

    /**
     * 
     * @param field
     * @param email
     * @param token
     * @param value
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateMember", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UpdateMember")
    @ResponseWrapper(localName = "updateMemberResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UpdateMemberResponse")
    public long updateMember(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "field", targetNamespace = "")
        String field,
        @WebParam(name = "value", targetNamespace = "")
        String value)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param member
     * @param token
     * @return
     *     returns java.util.List<com.emailvision.apimember.service.api.ApiMember>
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListMembersByObj", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetListMembersByObj")
    @ResponseWrapper(localName = "getListMembersByObjResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetListMembersByObjResponse")
    public List<ApiMember> getListMembersByObj(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "member", targetNamespace = "")
        SynchroMember member)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param page
     * @param token
     * @return
     *     returns com.emailvision.apimember.service.api.ApiPagination
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getListMembersByPage", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetListMembersByPage")
    @ResponseWrapper(localName = "getListMembersByPageResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.GetListMembersByPageResponse")
    public ApiPagination getListMembersByPage(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "page", targetNamespace = "")
        int page)
        throws ConnectionServiceException, MemberServiceException
    ;

    /**
     * 
     * @param token
     * @param memberId
     * @return
     *     returns long
     * @throws MemberServiceException
     * @throws ConnectionServiceException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "unjoinMemberById", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UnjoinMemberById")
    @ResponseWrapper(localName = "unjoinMemberByIdResponse", targetNamespace = "http://api.service.apimember.emailvision.com/", className = "com.emailvision.apimember.service.api.UnjoinMemberByIdResponse")
    public long unjoinMemberById(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "memberId", targetNamespace = "")
        long memberId)
        throws ConnectionServiceException, MemberServiceException
    ;

}
